{"version":3,"file":"js/app.6a291574.js","mappings":"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","sources":["webpack://frontend/./src/App.vue","webpack://frontend/./src/components/ResultModal.vue","webpack://frontend/./src/components/ResultModal.vue?34a4","webpack://frontend/./src/js/map.js","webpack://frontend/./src/js/score.js","webpack://frontend/./src/components/ThreeCanvas.vue","webpack://frontend/./src/components/ThreeCanvas.vue?5fdf","webpack://frontend/./src/App.vue?7ccd","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/compat get default export","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object","webpack://frontend/webpack/runtime/publicPath","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["<template>\n    <Suspense>\n        <ThreeCanvas/>\n    </Suspense>\n</template>\n\n<script>\nimport ThreeCanvas from \"@/components/ThreeCanvas.vue\";\n\nexport default {\n  name: 'App',\n  components: {\n      ThreeCanvas: ThreeCanvas,\n  }\n}\n</script>\n\n","<template>\n  <div>\n      <div v-if=\"showModal\" class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <div class=\"title-container\">\n          <h2>VOTRE RÉSULTAT</h2>\n          <img class=\"logo-img face-img\" src=\"../assets/face.svg\" alt=\"human\"/>\n        </div>\n        <div class=\"scoreboard\">\n          <div class=\"scoreboard-item\">\n            <h3 class=\"score-label\">CO2</h3>\n            <p class=\"score-value\">{{ score.co2 }} g</p>\n          </div>\n          <div class=\"scoreboard-item\">\n            <h3 class=\"score-label\">Temps d'arrêt</h3>\n            <p class=\"score-value\">{{ score.wait }} secondes</p>\n          </div>\n        </div>\n        <div class=\"containerImg\">\n          <img class=\"cloud-img\" src=\"../assets/cloudversify.svg\" alt=\"cloud\" :style=\"{\n            height: 120 * (score.co2/100) + 'px'}\"/>\n            <img class=\"car-img\" src=\"../assets/co2-emissions-human.png\" alt=\"car\"/>\n        </div>\n        <div class=\"title-container\">\n          <h2>LE RÉSULTAT DE L'IA</h2>\n          <img class=\"logo-img toy-img\" src=\"../assets/toy.svg\" alt=\"robot\"/>\n        </div>\n        <div class=\"scoreboard\">\n          <div class=\"scoreboard-item\">\n            <h3 class=\"score-label\">CO2</h3>\n            <p class=\"score-value\">{{ aiScore.co2 }} g</p>\n          </div>\n          <div class=\"scoreboard-item\">\n            <h3 class=\"score-label\">Temps d'arrêt</h3>\n            <p class=\"score-value\">{{ aiScore.wait }} secondes</p>\n          </div>\n        </div>\n        <div class=\"containerImg\">\n          <img class=\"cloud-img\" src=\"../assets/cloudversify.svg\" alt=\"cloud\" :style=\"{\n            height: 120 * (aiScore.co2/100) + 'px'}\"/>\n            <img class=\"car-img\" src=\"../assets/co2-emissions-robot.png\" alt=\"car\"/>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    showModal: {\n      type: Boolean,\n      default: false\n    },\n    score: {\n      default: {\n        co2: 0,\n        wait: 0\n      }\n    },\n    aiScore: {\n      default: {\n        co2: 0,\n        wait: 0\n      }\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close-modal');\n    },\n  }\n};\n</script>\n\n<style>\n\n.modal-content {\n    background-color: #fefefe;\n    margin: 2%;\n    padding: 20px;\n    border: none;\n    display: block;\n    position: fixed;\n    z-index: 9999;\n    left: 0;\n    top: 0;\n    width: 400px;\n    height: 90%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    border-radius: 18px;\n}\n\n.close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.title-container {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n.containerImg{\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.face-img{\n  filter: invert(8%) sepia(100%) saturate(7498%) hue-rotate(248deg) brightness(96%) contrast(145%);\n}\n\n.toy-img{\n  filter: invert(10%) sepia(97%) saturate(5518%) hue-rotate(358deg) brightness(117%) contrast(114%);\n}\n\n.cloud-img {\n  height: 100%;\n  transform: rotate(180deg);\n}\n\n.car-img {\n  width: 60%;\n}\n\n/* Scoreboard styles */\n.scoreboard {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  background-color: #C8E1DB;\n}\n\n.scoreboard-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.score-label {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\n.score-value {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.score-graphic {\n  width: 100px;\n  height: 150px;\n  background-color: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  overflow: hidden;\n  margin-bottom: 10px;\n  position: relative;\n}\n\n.bar {\n  background-color: #7fc1ff;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  transition: height 0.5s;\n}\n</style>\n","import { render } from \"./ResultModal.vue?vue&type=template&id=39eda108\"\nimport script from \"./ResultModal.vue?vue&type=script&lang=js\"\nexport * from \"./ResultModal.vue?vue&type=script&lang=js\"\n\nimport \"./ResultModal.vue?vue&type=style&index=0&id=39eda108&lang=css\"\n\nimport exportComponent from \"/home/nat/Main/cia/projet-levisium/eureka-levisium2024-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import axios from 'axios';\n\n\nexport async function getMap() {\n    const url = `${axios.defaults.baseURL}map`;\n    return axios.get(url).then(response => response.data);\n}\n","import axios from 'axios';\n\n\nexport async function getScore(path) {\n    const url = `${axios.defaults.baseURL}score`;\n    const data = {\n        path: path\n    };\n    return axios.post(url, data).then((response) => response.data);\n}","<script setup>\nimport {useFBX} from '@tresjs/cientos'\nimport {shallowRef} from \"vue\";\nimport {useRenderLoop, useTexture} from \"@tresjs/core\";\nimport ResultModal from \"@/components/ResultModal.vue\";\n\nconst upDownTexture = await useTexture({\n    map: '/textures/upDown.jpg'\n});\nconst leftRightTexture = await useTexture({\n    map: '/textures/leftRight.jpg'\n});\nconst otherTexture = await useTexture({\n    map: '/textures/otherIntersection.jpg'\n});\nconst grassTexture = await useTexture({\n    map: '/textures/grass.jpg'\n});\nconst lightTexture = await useTexture({\n    map: '/textures/streetLights.png'\n});\nconst stopTexture = await useTexture({\n    map: '/textures/stop.png'\n});\nconst rainbowTexture = await useTexture({\n    map: '/textures/rainbow.jpg'\n});\n\n\nconst cameraRef = shallowRef(PerspectiveCamera)\nconst model = await useFBX('/models/Car.fbx')\n\nconst boxRef = shallowRef(null)\nconst intersectionRef = shallowRef(null)\n\nconst {onLoop} = useRenderLoop()\n\nlet carPosition = null\nlet carOrientation = \"up\"\n\nfunction correctNextDirectionForCamera(nextDirection) {\n    const cameraPositionX = cameraRef.value.position.x\n    const cameraPositionZ = cameraRef.value.position.z\n\n    const up = \"up\"\n    const down = \"down\"\n    const left = \"left\"\n    const right = \"right\"\n\n    if (cameraPositionX >= 0 && cameraPositionX >= Math.abs(cameraPositionZ)) {\n        return {up: right, down: left, left: up, right: down}[nextDirection]        \n    } else if (cameraPositionX <= 0 && Math.abs(cameraPositionX) >= Math.abs(cameraPositionZ)) {\n        return {up: left, down: right, left: down, right: up}[nextDirection]        \n    } else if (cameraPositionZ >= 0 && Math.abs(cameraPositionZ) >= Math.abs(cameraPositionX)) {\n        return {up: down, down: up, left: right, right: left}[nextDirection]\n    } else {\n        return nextDirection\n    }\n}\n\nfunction moveMap(delta) {\n    const rowCol = getTensorPosition()\n    const row = rowCol[0]\n    const col = rowCol[1]\n\n    const speed = speedTensor[row][col] ** 2 / 3\n\n    let dx = 0\n    let dy = 0\n    switch (carOrientation) {\n        case \"up\":\n            dy = 1\n            break;\n        case \"down\":\n            dy = -1\n            break;\n        case \"left\":\n            dx = 1\n            break;\n        case \"right\":\n            dx = -1\n            break;\n    }\n\n    let distance = speed * delta\n\n    for (let i = 0; i < boxRef.value.length; i++) {\n        let cube = boxRef.value[i];\n        cube.position.z -= dy * distance\n        cube.position.x -= dx * distance\n    }\n    for (let i = 0; i < intersectionRef.value.length; i++) {\n        let cube = intersectionRef.value[i];\n        cube.position.z -= dy * distance;\n        cube.position.x -= dx * distance;\n    }\n    carPosition[0] += dx * distance\n    carPosition[1] += dy * distance\n    return distance\n}\n\nfunction isNextCubeAnIntersection() {\n    // according to the car position and orientation and the tensor, check if the next cube is an intersection, i.e one of the 3 values is 1\n    // if it is, return true, else return false\n    let rowCol = getTensorPosition()\n    let row = rowCol[0]\n    let col = rowCol[1]\n\n    switch (carOrientation) {\n        case \"up\":\n            if (row === 0) {\n                if (tensor[row + 1] === undefined) {\n                    return false;\n                }\n                return tensor[row + 1][col] === 1;\n            }\n            if (tensor[row + 1] === undefined) {\n                return tensor[row - 1][col] === 1;\n            }\n            return tensor[row + 1][col] === 1 || tensor[row - 1][col] === 1;\n        case \"down\":\n            if (row === 0) {\n                if (tensor[row + 1] === undefined) {\n                    return false;\n                }\n                return tensor[row + 1][col] === 1;\n            }\n            if (tensor[row + 1] === undefined) {\n                return tensor[row - 1][col] === 1;\n            }\n            return tensor[row + 1][col] === 1 || tensor[row - 1][col] === 1;\n        case \"left\":\n            if (col === 0) {\n                return tensor[row][col + 1] === 1;\n            }\n            return tensor[row][col + 1] === 1 || tensor[row][col - 1] === 1;\n        case \"right\":\n            if (col === 0) {\n                return tensor[row][col + 1] === 1;\n            }\n            return tensor[row][col + 1] === 1 || tensor[row][col - 1] === 1;\n    }\n}\n\nfunction getAvailableTurns() {\n    // according to the car position and orientation and the tensor, return the available turns\n    // if there is no turn, return null\n    let rowCol = getTensorPosition()\n    let row = rowCol[0]\n    let col = rowCol[1]\n\n    let turns = []\n\n    if (col !== 0) {\n        if (tensor[row][col - 1] === 1) {\n            turns.push(\"down\")\n        }\n    }\n    if (tensor[row][col + 1] !== undefined) {\n        if (tensor[row][col + 1] === 1) {\n            turns.push(\"up\")\n        }\n    }\n    if (row !== 0) {\n        if (tensor[row - 1][col] === 1) {\n            turns.push(\"right\")\n        }\n    }\n    if (tensor[row + 1] !== undefined) {\n        if (tensor[row + 1][col] === 1) {\n            turns.push(\"left\")\n        }\n    }\n    return turns\n}\n\nfunction setCarOrientation(newOrientation) {\n    carOrientation = newOrientation\n    switch (newOrientation) {\n        case \"up\":\n            model.rotation.y = 0\n            break;\n        case \"down\":\n            model.rotation.y = Math.PI\n            break;\n        case \"left\":\n            model.rotation.y = Math.PI / 2\n            break;\n        case \"right\":\n            model.rotation.y = -Math.PI / 2\n            break;\n    }\n    model.updateWorldMatrix(true, true)\n}\n\nfunction getTensorPosition() {\n    let row = Math.round(carPosition[0] / CUBE_SIZE);\n    let col = Math.round(carPosition[1] / CUBE_SIZE);\n    return [row, col]\n}\n\nfunction getRealWorldCoordinates(tensorPosition) {\n    let row = tensorPosition[0]\n    let col = tensorPosition[1]\n\n    let x = row * CUBE_SIZE\n    let z = col * CUBE_SIZE\n\n    return [x, z]\n}\n\nlet state = \"moving\"\nlet cubeToCross = null\nlet toDirection = null\nlet distanceToCross = null\nlet path = []\n\nfunction addToPositionPath() {\n    let tensorPosition = getTensorPosition()\n    if (path.length === 0) {\n        path.push(tensorPosition)\n    } else {\n        let last = path[path.length - 1]\n        if (last[0] !== tensorPosition[0] || last[1] !== tensorPosition[1]) {\n            path.push(tensorPosition)\n        }\n    }\n}\n\nfunction isTheEndReached() {\n    const rowCol = getTensorPosition()\n    const row = rowCol[0]\n    const col = rowCol[1]\n\n    return row === END[0] && col === END[1]\n\n}\n\nasync function endGame() {\n    carPosition = null\n    setCarOrientation(\"up\")\n    await fetchScore(path)\n    setShowModal(true)\n    setMap(path)\n    path = []\n}\n\nonLoop(({delta}) => {\n    if(getShowModal()){\n        return\n    }\n    if (START !== null && carPosition === null) {\n        carPosition = getRealWorldCoordinates(START)\n    }\n    else{\n        console.log(\"state=\" + state + \" - toDirection=\" + toDirection + \" - carOrientation=\" + carOrientation + ' - distanceToCross='+distanceToCross + \" - showModal=\"+ getShowModal())\n        if (boxRef.value) {\n            if (isTheEndReached() && getShowModal() === false) {\n                endGame()\n                return\n            }\n            switch (state) {\n                case \"moving\":\n                    if (isNextCubeAnIntersection()) {\n                        state = \"stopped\"\n                        cubeToCross = getTensorPosition()\n                        uiNextDirection = null\n                        nextDirectionCorrectedForCamera = null\n                        break;\n                    } else {\n                        moveMap(delta)\n                        break;\n                    }\n                case \"stopped\":\n                    if (uiNextDirection != null) {\n                        nextDirectionCorrectedForCamera = correctNextDirectionForCamera(uiNextDirection)\n                    } else {\n                        break;\n                    }\n\n                    if (getAvailableTurns().includes(nextDirectionCorrectedForCamera)) {\n                        state = \"crossing\"\n                        toDirection = nextDirectionCorrectedForCamera\n                        if (carOrientation !== toDirection) {\n                                setCarOrientation(toDirection)\n                            }\n                        break;\n                    } else {\n                        uiNextDirection = null\n                        break;\n                    }\n                case \"crossing\":\n                    if (cubeToCross !== null && cubeToCross[0] === getTensorPosition()[0] && cubeToCross[1] === getTensorPosition()[1]) {\n                        if (distanceToCross === null) {\n                            distanceToCross = CUBE_SIZE\n                        } else if (distanceToCross > CUBE_SIZE / 2) {\n                            distanceToCross -= moveMap(delta)\n                            break;\n                        } else if (distanceToCross > 0) {\n                            if (carOrientation !== toDirection) {\n                                setCarOrientation(toDirection)\n                            }\n                            distanceToCross -= moveMap(delta)\n                            break;\n                        } else {\n                            distanceToCross = null\n                            break;\n                        }\n                        break;\n                    } else {\n                        distanceToCross = null\n                        state = \"moving\"\n                        break;\n                    }\n            }\n            addToPositionPath()\n        }\n    }\n\n})\n</script>\n<template>\n    <div class=\"container\">\n        <ResultModal :show-modal=\"showModal\" :score=\"score\" :aiScore=\"aiScore\" @close-modal=\"resetMap()\"/>\n        <div v-if=\"!showModal\" class=\"gamePad\">\n            <br>\n            <button class=\"arrows\" @click=\"move('up')\"><img src=\"../assets/arrow.svg\" class=\"up\"></button>\n            <br>\n            <button class=\"arrows\" @click=\"move('left')\"><img src=\"../assets/arrow.svg\" class=\"left\"></button>\n            <button class=\"arrows\" @click=\"move('down')\"><img src=\"../assets/arrow.svg\" class=\"down\"></button>\n            <button class=\"arrows\" @click=\"move('right')\"><img src=\"../assets/arrow.svg\" class=\"right\"></button>\n        </div>\n        <TresCanvas clear-color=\"#82DBC5\" window-size=\"true\" class=\"canvas\">\n            <TresPerspectiveCamera ref=\"cameraRef\" :position=\"camera.position\" :look-at=\"mapCenter\" :far=\"camera.far\"/>\n            <OrbitControls/>\n            <TresScene>\n                <TresMesh v-for=\"(cube, index) in map\" :key=\"index\" :position=\"cube.position\" ref=\"boxRef\">\n                    <TresBoxGeometry :args=\"cube.dimensions\"/>\n                    <TresMeshStandardMaterial v-if=\"cube.map === 'upDown'\" :map=\"upDownTexture.map\" :color=\"cube.color\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'leftRight'\" :map=\"leftRightTexture.map\" :color=\"cube.color\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'other'\" :map=\"otherTexture.map\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'grass'\" :map=\"grassTexture.map\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'rainbow'\" :map=\"rainbowTexture.map\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'aiPath'\" :color=\"'red'\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'humanPath'\" :color=\"'blue'\"/>\n                    <TresMeshStandardMaterial v-else :map=\"grassTexture.map\"/>\n                </TresMesh>\n                <TresMesh v-for=\"(cube, index) in intersection\" :key=\"index\" :position=\"cube.position\"\n                          ref=\"intersectionRef\">\n                    <TresBoxGeometry :args=\"cube.dimensions\"/>\n                    <TresMeshStandardMaterial v-if=\"cube.map === 'light'\" :map=\"lightTexture.map\"/>\n                    <TresMeshStandardMaterial v-else-if=\"cube.map === 'stop'\" :map=\"stopTexture.map\"/>\n                </TresMesh>\n                <Suspense>\n                    <TresMesh v-bind=\"model\"/>\n                </Suspense>\n            </TresScene>\n            <TresAmbientLight :intensity=\"4\"/>\n            map.length/2\n        </TresCanvas>\n    </div>\n</template>\n\n<script>\nimport {TresCanvas} from '@tresjs/core'\nimport {OrbitControls} from \"@tresjs/cientos\";\n\nconst CUBE_SIZE = 400\nconst CAR_SIZE = 200\n\nlet setShowModal = null\nlet getShowModal = null\nlet fetchScore = null\nlet setMap = null\n\nlet START = null\nlet END = null\n\nlet uiNextDirection = null\nlet nextDirectionCorrectedForCamera = null\n\nimport tensor from '../data/tensor.json'\nimport speedTensor from '../data/speedTensor.json'\nimport stopTensor from '../data/stopTensor.json'\nimport { getMap } from '@/js/map.js'\nimport { getScore } from \"@/js/score\";\nimport { PerspectiveCamera } from 'three';\n\nexport default {\n    name: 'ThreeCanvas',\n    components: {\n        OrbitControls: OrbitControls,\n        TresCanvas: TresCanvas,\n    },\n    data() {\n        return {\n          camera: {\n            position: [0, 300, -800],\n            far: 100000\n          },\n            mapCenter: [15, 1, 13],\n            car: {\n                position: [15, 1, 13],\n                color: 'orange',\n                dimensions: [0.5, 0.5, 0.5]\n            },\n            map: [],\n            showModal: false,\n            intersection: [],\n            tensor: tensor,\n            speedTensor: speedTensor,\n            stopTensor: stopTensor,\n            trafficTensor : [],\n            start : [],\n            end : [],\n            score : {},\n            aiScore : {},\n            aiPath : null,\n            humanPath : null\n        }\n    },\n    computed: {\n        carPosition(){\n            return this.car\n        }\n    },\n    methods: {\n        resetMap() {\n            this.aiPath = null\n            this.humanPath = null\n            setShowModal(false)\n            this.setCamera()\n            this.tensorToMap()\n            this.tensorToIntersection()\n        },\n        getShowModal() {\n            return this.showModal\n        },\n        setShowModal(showModal) {\n            this.showModal = showModal\n        },\n        setMap(path) {\n            this.humanPath = path\n            this.setCamera()\n            this.pathToMap()\n            this.tensorToIntersection()\n        },\n        setCamera() {\n              if (this.showModal) {\n                  this.camera.position = [0, 10000, -8000]\n                  this.mapCenter = [15, -10, 13]\n                  this.camera.far = null\n              } else {\n                  this.camera.position = [0, 300, -800]\n                  this.camera.far = 100000\n              }\n          },\n        robustGet(map, row, col = null) {\n            if (row < 0) {\n                return null\n            }\n            if (col < 0) {\n                return null\n            }\n            if (map[row] === undefined) {\n                return null\n            }\n            if (map[row][col] === undefined) {\n                return null\n            }\n            return map[row][col]\n        },\n        findAppropriateMap(tensorCoordinate) {\n            function checkPts(pt) {\n              return pt[0] === tensorCoordinate[0] && pt[1] === tensorCoordinate[1]\n            }\n\n            if (this.aiPath && this.aiPath.find(checkPts)){\n                return 'aiPath'\n            }\n            if (this.humanPath && this.humanPath.find(checkPts)){\n                return 'humanPath'\n            }\n\n            const row = tensorCoordinate[0];\n            const col = tensorCoordinate[1];\n            // if the cube at the right and the left are 1, and up and down are 0, then it's a left-right cube\n            if (this.robustGet(this.tensor, row, col - 1) === 1 && this.robustGet(this.tensor, row, col + 1) === 1 && this.robustGet(this.tensor, row - 1, col) !== 1 && this.robustGet(this.tensor, row + 1, col) !== 1) {\n                return 'upDown'\n            }\n            // if the cube at the right and the left are 0, and up and down are 1, then it's a up-down cube\n            if (this.robustGet(this.tensor, row, col - 1) !== 1 && this.robustGet(this.tensor, row, col + 1) !== 1 && this.robustGet(this.tensor, row - 1, col) === 1 && this.robustGet(this.tensor, row + 1, col) === 1) {\n                return 'leftRight'\n            }\n            return 'other'\n        },\n        move(direction) {\n            switch (direction) {\n                case 'up':\n                    uiNextDirection = 'up'\n                    break;\n                case 'left':\n                    uiNextDirection = 'left'\n                    break;\n                case 'right':\n                    uiNextDirection = 'right'\n                    break;\n                case 'down':\n                    uiNextDirection = 'down'\n                    break;\n                default:\n                    break;\n            }\n        },\n        findNextIntersection() {\n            const row = this.car.position[0];\n            const col = this.car.position[2];\n            const intersections = this.intersection;\n            const map = this.tensor;\n\n            // Check left intersection\n            if (col > 0 && map[row][col - 1] === 2) {\n                intersections.push([row, col - 1]);\n            }\n\n            // Check right intersection\n            if (col < map[row].length - 1 && map[row][col + 1] === 2) {\n                intersections.push([row, col + 1]);\n            }\n\n            // Check up intersection\n            if (row > 0 && map[row - 1][col] === 2) {\n                intersections.push([row - 1, col]);\n            }\n\n            // Check down intersection\n            if (row < map.length - 1 && map[row + 1][col] === 2) {\n                intersections.push([row + 1, col]);\n            }\n\n            return intersections;\n        },\n        tensorToMap() {\n            let map = []\n            let startXOffset = this.start[0] * CUBE_SIZE\n            let startZOffset = this.start[1] * CUBE_SIZE\n\n            map.push({\n                position: [this.end[0] * CUBE_SIZE - startXOffset, CAR_SIZE, this.end[1] * CUBE_SIZE - startZOffset],\n                map: 'rainbow',\n                dimensions: [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n            })\n            for (let i = 0; i < this.tensor.length; i++) {\n                for (let j = 0; j < this.tensor[i].length; j++) {\n                    if (this.tensor[i][j] === 1)\n                    {\n                      let position = [i * CUBE_SIZE - startXOffset, -CAR_SIZE, j * CUBE_SIZE - startZOffset]\n                      let appropriateMap = this.findAppropriateMap([i, j])\n                      let dimensions = [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n                      let color = 'orange'\n                      // Shows speed limit\n                      if (this.speedTensor[i][j] === 30 ) color = 'red'\n                      else if (this.speedTensor[i][j] === 70 ) color = 'yellow'\n                      else if (this.speedTensor[i][j] === 100) color = 'green'\n                      map.push({position: position, color: color, dimensions: dimensions, map: appropriateMap})\n                    }\n                    if (this.tensor[i][j] === 0) map.push({\n                        position: [i * CUBE_SIZE - startXOffset, -CAR_SIZE, j * CUBE_SIZE - startZOffset],\n                        map: 'grass',\n                        dimensions: [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n                    })\n                }\n            }\n            this.map = map\n        },\n        tensorToIntersection() {\n            let startXOffset = this.start[0] * CUBE_SIZE\n            let startZOffset = this.start[1] * CUBE_SIZE\n            let intersection = []\n            for (let i = 0; i < this.stopTensor.length; i++) {\n                for (let j = 0; j < this.stopTensor[i].length; j++) {\n                    if (this.stopTensor[i][j] === 1) intersection.push({\n                        position: [i * CUBE_SIZE - startXOffset, CUBE_SIZE - CAR_SIZE, j * CUBE_SIZE - startZOffset],\n                        map: 'stop',\n                        dimensions: [0.3 * CUBE_SIZE, 0.3 * CUBE_SIZE, 0.3 * CUBE_SIZE]\n                    })\n                    if (this.stopTensor[i][j] === 2) intersection.push({\n                        position: [i * CUBE_SIZE - startXOffset, CUBE_SIZE - CAR_SIZE, j * CUBE_SIZE -startZOffset],\n                        map: 'light',\n                        dimensions: [0.3 * CUBE_SIZE, 0.3 * CUBE_SIZE, 0.3 * CUBE_SIZE]\n                    })\n                }\n            }\n            this.intersection = intersection\n        },\n        pathToMap()\n        {\n          let map = []\n            let startXOffset = this.start[0] * CUBE_SIZE\n            let startZOffset = this.start[1] * CUBE_SIZE\n\n            map.push({\n                position: [this.end[0] * CUBE_SIZE - startXOffset, CAR_SIZE, this.end[1] * CUBE_SIZE - startZOffset],\n                map: 'rainbow',\n                dimensions: [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n            })\n            for (let i = 0; i < this.tensor.length; i++) {\n                for (let j = 0; j < this.tensor[i].length; j++) {\n                    if (this.tensor[i][j] === 1)\n                    {\n                      let position = [i * CUBE_SIZE - startXOffset, -CAR_SIZE, j * CUBE_SIZE - startZOffset]\n                      let appropriateMap = this.findAppropriateMap([i, j])\n                      let dimensions = [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n                      let color = 'white'\n                      map.push({position: position, color: color, dimensions: dimensions, map: appropriateMap})\n                    }\n                    if (this.tensor[i][j] === 0) map.push({\n                        position: [i * CUBE_SIZE - startXOffset, -CAR_SIZE, j * CUBE_SIZE - startZOffset],\n                        map: 'grass',\n                        dimensions: [CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]\n                    })\n                }\n            }\n            this.map = map\n        },\n        async fetchMap() {\n          const mapInfos = await getMap();\n          this.start = mapInfos.start;\n          this.end = mapInfos.end;\n          this.trafficTensor = mapInfos.traffic;\n        },\n        async fetchScore(path) {\n          const scores = await getScore(path);\n          this.score = scores.human_stats;\n          this.aiScore = scores.AI_stats;\n          this.aiPath = scores.AI_path;\n        }\n    },\n    async mounted() {\n        setShowModal = this.setShowModal\n        getShowModal = this.getShowModal\n        fetchScore = this.fetchScore\n        setMap = this.setMap\n        await this.fetchMap();\n        START = this.start\n        END = this.end\n        this.tensorToIntersection();\n        this.tensorToMap();\n    }\n\n}\n</script>\n\n<style scoped>\nimg {\n    filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(354deg) brightness(102%) contrast(101%);\n}\n\n.container {\n    position: relative;\n    left: 0;\n    top: 0;\n}\n\n.canvas {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1;\n}\n\n.arrows {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50px;\n    height: 50px;\n    background-color: rgba(2, 0, 36, 0.3);\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 24px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.gamePad {\n    position: fixed;\n    right:0;\n    bottom:0;\n    padding-right: 50px;\n    padding-bottom: 50px;\n    z-index: 2;\n    display: grid;\n    grid-template-columns: 60px 60px 60px;\n    grid-template-rows: 60px 60px;\n    gap: 0px 0px;\n    grid-template-areas:\n    \". up .\"\n    \"left down right\";\n}\n\n.up {\n    grid-area: up;\n    width: 100%;\n    height: auto;\n}\n\n.left {\n    transform: rotate(-90deg);\n    grid-area: left;\n    width: 100%;\n    height: auto;\n}\n\n.down {\n    transform: rotate(180deg);\n    grid-area: down;\n    width: 100%;\n    height: auto;\n}\n\n.right {\n    transform: rotate(90deg);\n    grid-area: right;\n    width: 100%;\n    height: auto;\n}\n</style>\n","import script from \"./ThreeCanvas.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThreeCanvas.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThreeCanvas.vue?vue&type=style&index=0&id=1c6ce1a0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/nat/Main/cia/projet-levisium/eureka-levisium2024-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1c6ce1a0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=3f0cb25f\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/nat/Main/cia/projet-levisium/eureka-levisium2024-frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport axios from \"axios\";\nimport App from './App.vue'\n\naxios.defaults.baseURL = \"https://levisium-cia-bb1d6f904c9c.herokuapp.com/\";\ncreateApp(App).mount('#app')\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7578); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_Suspense","_createVNode","_component_ThreeCanvas","class","_createElementVNode","src","_imports_0","alt","_imports_2","_imports_3","_imports_4","_createElementBlock","$props","showModal","_hoisted_1","onClick","_cache","args","$options","closeModal","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","score","co2","_hoisted_7","_hoisted_8","_hoisted_9","wait","_hoisted_10","_imports_1","style","_normalizeStyle","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","aiScore","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","props","type","Boolean","default","methods","this","$emit","__exports__","async","getMap","url","axios","then","response","data","getScore","path","CUBE_SIZE","CAR_SIZE","setShowModal","getShowModal","fetchScore","setMap","START","END","uiNextDirection","nextDirectionCorrectedForCamera","__default__","name","components","OrbitControls","TresCanvas","camera","position","far","mapCenter","car","color","dimensions","map","intersection","tensor","speedTensor","stopTensor","trafficTensor","start","end","aiPath","humanPath","computed","carPosition","resetMap","setCamera","tensorToMap","tensorToIntersection","pathToMap","robustGet","row","col","undefined","findAppropriateMap","tensorCoordinate","checkPts","pt","find","move","direction","findNextIntersection","intersections","push","length","startXOffset","startZOffset","i","j","appropriateMap","mapInfos","traffic","scores","human_stats","AI_stats","AI_path","fetchMap","upDownTexture","useTexture","leftRightTexture","otherTexture","grassTexture","lightTexture","stopTexture","rainbowTexture","cameraRef","shallowRef","PerspectiveCamera","model","useFBX","boxRef","intersectionRef","onLoop","useRenderLoop","carOrientation","correctNextDirectionForCamera","nextDirection","cameraPositionX","value","x","cameraPositionZ","z","up","down","left","right","Math","abs","moveMap","delta","rowCol","getTensorPosition","speed","dx","dy","distance","cube","isNextCubeAnIntersection","getAvailableTurns","turns","setCarOrientation","newOrientation","rotation","y","PI","updateWorldMatrix","round","getRealWorldCoordinates","tensorPosition","state","cubeToCross","toDirection","distanceToCross","addToPositionPath","last","isTheEndReached","endGame","console","log","includes","ThreeCanvas","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}